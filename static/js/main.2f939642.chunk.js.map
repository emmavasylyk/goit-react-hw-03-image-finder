{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ItemGalleryItem.module.css","components/ImageGallery/ItemGallery.module.css","components/Button/Button.module.css","components/Loader/Loading.module.css","components/Container/Container.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","services/ImagesApi.js","components/Button/Button.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Container","children","Searchbar","state","inputValue","handleNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","s","this","SearchForm","SearchForm_button","type","style","marginRight","SearchForm_button_label","SearchForm_input","autoComplete","autoFocus","onChange","placeholder","Component","ItemGalleryItem","src","alt","dataSrc","onClick","ImageGalleryItem","ImageGalleryItem_image","ItemGallery","images","ImageGallery","map","id","webformatURL","largeImageURL","tags","api","fetchImages","query","page","fetch","then","res","json","Button","allyProps","modalRoot","document","querySelector","Modal","handleKeyDowm","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","ModalButton","ModalCloseIcon","App","imageGallery","showModal","modalImg","modalAlt","status","hundleFormSubmit","handleClickButton","handleClickImg","imgForModal","dataset","altForModal","toggleModal","prevProp","prevState","prevValue","nextValue","prevPage","nextPage","scrollTo","top","documentElement","scrollHeight","behavior","imagesApi","hits","length","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","catch","loader","color","height","width","message","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,YAAc,2BAA2B,eAAiB,gC,mBCA1ID,EAAOC,QAAU,CAAC,iBAAmB,0CAA0C,uBAAyB,kD,mBCAxGD,EAAOC,QAAU,CAAC,aAAe,oC,mBCAjCD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,0B,+KCGZC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,8BAAMA,K,gCCMMC,E,4MAKnBC,MAAQ,CACNC,WAAY,I,EAGdC,iBAAmB,SAAAC,GACjB,EAAKC,SAAS,CAAEH,WAAYE,EAAEE,cAAcC,MAAMC,iB,EAGpDC,aAAe,SAAAL,GAGb,GAFAA,EAAEM,iBAEmC,KAAjC,EAAKT,MAAMC,WAAWS,OACxB,OAAOC,IAAMC,MAAM,6GAGrB,EAAKC,MAAMC,SAAS,EAAKd,MAAMC,YAC/B,EAAKG,SAAS,CAAEH,WAAY,M,4CAG9B,WACE,OACE,wBAAQc,UAAWC,IAAEjB,UAArB,SACE,uBAAMe,SAAUG,KAAKT,aAAcO,UAAWC,IAAEE,WAAhD,UACE,yBAAQH,UAAWC,IAAEG,kBAAmBC,KAAK,SAA7C,UACE,cAAC,IAAD,CAAUC,MAAO,CAAEC,YAAa,KAChC,sBAAMP,UAAWC,IAAEO,wBAAnB,uBAGF,uBACER,UAAWC,IAAEQ,iBACbJ,KAAK,OACLK,aAAa,MACbC,WAAS,EACTpB,MAAOW,KAAKjB,MAAMC,WAClB0B,SAAUV,KAAKf,iBACf0B,YAAY,sC,GAxCeC,a,iBCJxB,SAASC,EAAT,GAA0D,IAA/BC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAC3D,OACE,oBAAInB,UAAWC,IAAEmB,iBAAjB,SACE,qBACEpB,UAAWC,IAAEoB,uBACbL,IAAKA,EACLC,IAAKA,EACL,WAAUC,EACVC,QAASA,M,qBCNF,SAASG,EAAT,GAA2C,IAApBC,EAAmB,EAAnBA,OAAQJ,EAAW,EAAXA,QAC5C,OACE,mCACE,oBAAInB,UAAWC,IAAEuB,aAAjB,SACGD,EAAOE,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KAC9C,OACE,cAACd,EAAD,CAEEC,IAAKW,EACLV,IAAKY,EACLX,QAASU,EACTT,QAASA,GAJJO,UCPnB,IACeI,EADH,CAAEC,YALd,SAAqBC,EAAOC,GAC1B,OAAOC,MAAM,8BAAD,OACoBF,EADpB,iBACkCC,EADlC,gGAEVE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,Y,+CCWLC,EAVA,SAAC,GAAD,IAAGnB,EAAH,EAAGA,QAAYoB,EAAf,wBACb,gDAAQvC,UAAWC,IAAEqC,OAAQjC,KAAK,SAASc,QAASA,GAAaoB,GAAjE,6B,0CCCIC,EAAYC,SAASC,cAAc,eAEpBC,E,4MAanBC,cAAgB,SAAAxD,GACC,WAAXA,EAAEyD,MACJ,EAAK/C,MAAMgD,W,EAIfC,oBAAsB,SAAA3D,GAChBA,EAAEE,gBAAkBF,EAAE4D,QACxB,EAAKlD,MAAMgD,W,uDAhBf,WACEG,OAAOC,iBAAiB,UAAWhD,KAAK0C,iB,kCAG1C,WACEK,OAAOE,oBAAoB,UAAWjD,KAAK0C,iB,oBAe7C,WACE,OAAOQ,uBACL,qBAAKpD,UAAWC,IAAEoD,QAASlC,QAASjB,KAAK6C,oBAAzC,SACE,sBAAK/C,UAAWC,IAAE0C,MAAlB,UACGzC,KAAKJ,MAAMf,SACZ,wBAAQsB,KAAK,SAASL,UAAWC,IAAEqD,YAAnC,SACE,cAAC,IAAD,CACEtD,UAAWC,IAAEsD,eACbpC,QAASjB,KAAKJ,MAAMgD,iBAK5BN,O,GAtC6B1B,a,yBCOd0C,E,4MACnBvE,MAAQ,CACNC,WAAY,GACZuE,aAAc,GACdC,WAAW,EACXC,SAAU,GACVC,SAAU,GACV3B,KAAM,EACNpC,MAAO,KACPgE,OAAQ,Q,EAsDVC,iBAAmB,SAAA5E,GACbA,IAAe,EAAKD,MAAMC,YAC5B,EAAKG,SAAS,CAAEH,aAAY+C,KAAM,EAAG4B,OAAQ,a,EAIjDE,kBAAoB,WAClB,EAAK1E,UAAS,YACZ,MAAO,CAAE4C,KADiB,EAAXA,KACO,EAAG4B,OAAQ,e,EAGrCG,eAAiB,SAAA5E,GACf,IAAM6E,EAAc7E,EAAE4D,OAAOkB,QAAQlD,IAC/BmD,EAAc/E,EAAE4D,OAAO/B,IAC7B,EAAK5B,SAAS,CACZqE,WAAW,EACXC,SAAUM,EACVL,SAAUO,K,EAIdC,YAAc,WACZ,EAAK/E,UAAS,kBAAoB,CAChCqE,WADY,EAAGA,e,wDAzEnB,SAAmBW,EAAUC,GAAY,IAAD,OAChCC,EAAYD,EAAUpF,WACtBsF,EAAYtE,KAAKjB,MAAMC,WAEvBuF,EAAWH,EAAUrC,KACrByC,EAAWxE,KAAKjB,MAAMgD,KAExByC,EAAW,GACbzB,OAAO0B,SAAS,CACdC,IAAKnC,SAASoC,gBAAgBC,aAC9BC,SAAU,WAIVR,IAAcC,GAChBtE,KAAKb,SAAS,CAAEoE,aAAc,GAAII,OAAQ,YAGxCU,IAAcC,GAAaC,IAAaC,GAC1CM,EACGjD,YAAYyC,EAAWE,GACvBvC,MAAK,YAAe,IACbZ,EADY,EAAX0D,KACaxD,KAClB,YACE,MAAO,CAAEC,GADoC,EAA5CA,GACYC,aADgC,EAAxCA,aACsBC,cADkB,EAA1BA,cACuBC,KADG,EAAXA,SAIlCN,EAAO2D,OAAS,EAClB,EAAK7F,UAAS,SAAAiF,GACZ,MAAO,CACLb,aAAa,GAAD,mBAAMa,EAAUb,cAAhB,YAAiClC,IAC7CsC,OAAQ,gBAIZjE,IAAMuF,KAAN,uGAAgCX,EAAhC,6DAAyD,CACvDY,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAEZ,EAAKtG,SAAS,CAAEwE,OAAQ,aAG3B+B,OAAM,SAAA/F,GAAK,OAAI,EAAKR,SAAS,CAAEQ,QAAOgE,OAAQ,kB,oBA+BrD,WACE,MACE3D,KAAKjB,MADC4E,EAAR,EAAQA,OAAQJ,EAAhB,EAAgBA,aAAc5D,EAA9B,EAA8BA,MAAO6D,EAArC,EAAqCA,UAAWC,EAAhD,EAAgDA,SAAUC,EAA1D,EAA0DA,SAE1D,OACE,eAAC,EAAD,WACc,SAAXC,GAAqB,cAAC,EAAD,CAAW9D,SAAUG,KAAK4D,mBACpC,YAAXD,GACC,qCACE,cAAC,EAAD,CAAW9D,SAAUG,KAAK4D,mBAC1B,cAAC,EAAD,CAAcvC,OAAQkC,IACrBA,EAAayB,OAAS,GAAK,cAAC,EAAD,CAAc3D,OAAQkC,IAClD,cAAC,IAAD,CACEzD,UAAWC,IAAE4F,OACbxF,KAAK,YACLyF,MAAM,UACNC,OAAQ,GACRC,MAAO,QAKD,aAAXnC,GACC,qCACGH,GACC,cAAC,EAAD,CAAOZ,QAAS5C,KAAKkE,YAArB,SACE,qBAAKpD,IAAK2C,EAAU1C,IAAK2C,MAG7B,cAAC,EAAD,CAAW7D,SAAUG,KAAK4D,mBAC1B,cAAC,EAAD,CAAc3C,QAASjB,KAAK8D,eAAgBzC,OAAQkC,IACpD,cAAC,EAAD,CAAQtC,QAASjB,KAAK6D,uBAId,aAAXF,GAAyB,6BAAKhE,EAAMoG,UACrC,cAAC,IAAD,CAAgBC,MAAO,mB,GA7HEpF,aCHlBqF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlE,MAAK,YAAkD,IAA/CmE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpE,SAASqE,eAAe,SAM1BX,K,kBCfAvH,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,kBAAoB,qCAAqC,wBAA0B,2CAA2C,iBAAmB,uC","file":"static/js/main.2f939642.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2UboI\",\"Modal\":\"Modal_Modal__2eZMm\",\"ModalButton\":\"Modal_ModalButton__2S2yv\",\"ModalCloseIcon\":\"Modal_ModalCloseIcon__2d7Nz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ItemGalleryItem_ImageGalleryItem__3Wb42\",\"ImageGalleryItem_image\":\"ItemGalleryItem_ImageGalleryItem_image__2W0Bq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ItemGallery_ImageGallery__18CAb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2ron_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loading_loader__kAtS7\"};","function Container({ children }) {\n  return <div>{children}</div>;\n}\n\nexport default Container;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    inputValue: '',\n  };\n\n  handleNameChange = e => {\n    this.setState({ inputValue: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.inputValue.trim() === '') {\n      return toast.error('Введите свой запрос!');\n    }\n\n    this.props.onSubmit(this.state.inputValue);\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form onSubmit={this.handleSubmit} className={s.SearchForm}>\n          <button className={s.SearchForm_button} type=\"submit\">\n            <ImSearch style={{ marginRight: 8 }} />\n            <span className={s.SearchForm_button_label}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchForm_input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            value={this.state.inputValue}\n            onChange={this.handleNameChange}\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport s from './ItemGalleryItem.module.css';\n\nexport default function ItemGalleryItem({ src, alt, dataSrc, onClick }) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        className={s.ImageGalleryItem_image}\n        src={src}\n        alt={alt}\n        data-src={dataSrc}\n        onClick={onClick}\n      />\n    </li>\n  );\n}\n\nItemGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  dataSrc: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ItemGalleryItem from '../ImageGalleryItem';\nimport s from './ItemGallery.module.css';\n\nexport default function ItemGallery({ images, onClick }) {\n  return (\n    <>\n      <ul className={s.ImageGallery}>\n        {images.map(({ id, webformatURL, largeImageURL, tags }) => {\n          return (\n            <ItemGalleryItem\n              key={id}\n              src={webformatURL}\n              alt={tags}\n              dataSrc={largeImageURL}\n              onClick={onClick}\n            />\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nItemGallery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }),\n  ),\n  onClick: PropTypes.func,\n};\n","function fetchImages(query, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=23952211-93282d818c12dbc54947c6758&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(res => res.json());\n}\nconst api = { fetchImages };\nexport default api;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick, ...allyProps }) => (\n  <button className={s.Button} type=\"button\" onClick={onClick} {...allyProps}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ImCross } from 'react-icons/im';\nimport s from './Modal.module.css';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDowm);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDowm);\n  }\n\n  handleKeyDowm = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          {this.props.children}\n          <button type=\"button\" className={s.ModalButton}>\n            <ImCross\n              className={s.ModalCloseIcon}\n              onClick={this.props.onClose}\n            />\n          </button>\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport imagesApi from './services/ImagesApi';\nimport Button from './components/Button';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Modal from './components/Modal';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\nimport s from './components/Loader/Loading.module.css';\n\nexport default class App extends Component {\n  state = {\n    inputValue: '',\n    imageGallery: [],\n    showModal: false,\n    modalImg: '',\n    modalAlt: '',\n    page: 1,\n    error: null,\n    status: 'idle',\n  };\n\n  componentDidUpdate(prevProp, prevState) {\n    const prevValue = prevState.inputValue;\n    const nextValue = this.state.inputValue;\n\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (nextPage > 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n\n    if (prevValue !== nextValue) {\n      this.setState({ imageGallery: [], status: 'pending' });\n    }\n\n    if (prevValue !== nextValue || prevPage !== nextPage) {\n      imagesApi\n        .fetchImages(nextValue, nextPage)\n        .then(({ hits }) => {\n          const images = hits.map(\n            ({ id, webformatURL, largeImageURL, tags }) => {\n              return { id, webformatURL, largeImageURL, tags };\n            },\n          );\n          if (images.length > 0) {\n            this.setState(prevState => {\n              return {\n                imageGallery: [...prevState.imageGallery, ...images],\n                status: 'resolved',\n              };\n            });\n          } else {\n            toast.warn(`По вашему запросу ${nextValue} ничего нет!`, {\n              position: 'top-right',\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            });\n            this.setState({ status: 'idle' });\n          }\n        })\n        .catch(error => this.setState({ error, status: 'rejected' }));\n    }\n  }\n\n  hundleFormSubmit = inputValue => {\n    if (inputValue !== this.state.inputValue) {\n      this.setState({ inputValue, page: 1, status: 'pendind' });\n    }\n  };\n\n  handleClickButton = () => {\n    this.setState(({ page }) => {\n      return { page: page + 1, status: 'pending' };\n    });\n  };\n  handleClickImg = e => {\n    const imgForModal = e.target.dataset.src;\n    const altForModal = e.target.alt;\n    this.setState({\n      showModal: true,\n      modalImg: imgForModal,\n      modalAlt: altForModal,\n    });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { status, imageGallery, error, showModal, modalImg, modalAlt } =\n      this.state;\n    return (\n      <Container>\n        {status === 'idle' && <Searchbar onSubmit={this.hundleFormSubmit} />}\n        {status === 'pending' && (\n          <>\n            <Searchbar onSubmit={this.hundleFormSubmit} />\n            <ImageGallery images={imageGallery} />\n            {imageGallery.length > 0 && <ImageGallery images={imageGallery} />}\n            <Loader\n              className={s.loader}\n              type=\"ThreeDots\"\n              color=\"#00BFFF\"\n              height={80}\n              width={80}\n            />\n          </>\n        )}\n\n        {status === 'resolved' && (\n          <>\n            {showModal && (\n              <Modal onClose={this.toggleModal}>\n                <img src={modalImg} alt={modalAlt} />\n              </Modal>\n            )}\n            <Searchbar onSubmit={this.hundleFormSubmit} />\n            <ImageGallery onClick={this.handleClickImg} images={imageGallery} />\n            <Button onClick={this.handleClickButton} />\n          </>\n        )}\n\n        {status === 'rejected' && <h2>{error.message}</h2>}\n        <ToastContainer theme={'colored'} />\n      </Container>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__EaW4d\",\"SearchForm\":\"Searchbar_SearchForm__32bYx\",\"SearchForm_button\":\"Searchbar_SearchForm_button__3XPTB\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__uQ8x8\",\"SearchForm_input\":\"Searchbar_SearchForm_input__2utpY\"};"],"sourceRoot":""}